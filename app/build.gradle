apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    signingConfigs {
        debug {
            storeFile file('testKey.jks')
            storePassword '123456'
            keyAlias = 'test'
            keyPassword '123456'
        }
        fabu {
            storeFile file('testKey.jks')
            storePassword '123456'
            keyAlias = 'test'
            keyPassword '123456'
        }
    }
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "com.wh.baseproject"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.releaseVersionCode
        versionName rootProject.releaseVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.debug
            ndk {
                abiFilters 'armeabi', 'x86'
            }
        }
        release {
            zipAlignEnabled true // Zip对齐,APK加载效率.
            signingConfig signingConfigs.fabu
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding{
        enabled = true
    }



    // Keep the following configuration in order to target Java 8.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

kapt {  // kapt 配置
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(path: ':whlibrary')
    implementation project(path: ':video')

    implementation "io.reactivex.rxjava2:rxjava:2.2.6" // 必要rxjava2依赖
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1" // 必要rxandrroid依赖，切线程时需要用到
    implementation 'com.squareup.retrofit2:retrofit:2.4.0' // 必要retrofit依赖
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0' // 必要依赖，和Rxjava结合必须用到，下面会提到
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0' // 必要依赖，解析json字符所用
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'

//    //非必要依赖， log依赖，如果需要打印OkHttpLog需要添加
//    debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
//    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'

    kapt 'com.android.databinding:compiler:3.1.4'  // DataBinding 注解处理依赖

    implementation 'cn.yipianfengye.android:zxing-library:2.2'


    implementation 'com.blankj:utilcodex:1.26.0'


}



